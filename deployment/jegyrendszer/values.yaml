mongodb:
  architecture: replicaset
  replicaCount: 2
  auth:
    enabled: true
    rootUser: root
    rootPassword: "root"
  image:
    tag: 4.2.21-debian-10-r8
  metrics:
    enabled: true
redis:
  architecture: standalone
  auth:
    enabled: true
    password: "root"
grafana:
  replicas: 1
  service:
    type: LoadBalancer
    port: 5000
  persistence:
    enabled: true
    annotations:
      helm.sh/resource-policy: "keep"
prometheus:
  alertmanagers:
    - config:
        receivers:
        - name: slack-receiver
          slack_configs:
          - api_url: "https://hooks.slack.com/services/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"
            channel: "#grafana-alerts"
            send_resolved: true
            text: >-
                {{ range .Alerts -}}
                *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                *Description:* {{ .Annotations.description }}
                *Details:*
                  {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                  {{ end }}
                {{ end }}
  serverFiles:
    alerting_rules.yml:
      groups:
        - name: alert.rules
          rules:
            - alert: InstanceDown
              expr: up == 0
              for: 1m
              labels:
                severity: "critical"
              annotations:
                summary: "Endpoint {{ $labels.instance }} down"
                description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minutes."
            - alert: HostOutOfMemory
              expr: node_memory_MemAvailable / node_memory_MemTotal * 100 < 25
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "Host out of memory (instance {{ $labels.instance }})"
                description: "Node memory is filling up (< 25% left)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
            - alert: HostOutOfDiskSpace
              expr: (node_filesystem_avail{mountpoint="/"}  * 100) / node_filesystem_size{mountpoint="/"} < 50
              for: 1s
              labels:
                severity: warning
              annotations:
                summary: "Host out of disk space (instance {{ $labels.instance }})"
                description: "Disk is almost full (< 50% left)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
            - alert: HostHighCpuLoad
              expr: (sum by (instance) (irate(node_cpu{job="node_exporter_metrics",mode="idle"}[5m]))) > 80
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "Host high CPU load (instance {{ $labels.instance }})"
                description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
handle:
  storageClass: nfs
    # default: local-path
    # nfs: nfs
replication:
  web: 2
  handle: 2
loki:
  commonConfig:
    replication_factor: 1
  storage:
    type: 'filesystem'
singleBinary:
  replicas: 1
versions:
  handle_tag: latest
  web_tag: latest